namespace Plexx {
    export class BoundingBox2d {
        private min: Mathlib.Vec2;
        private max: Mathlib.Vec2;

        constructor(min: Mathlib.Vec2, max: Mathlib.Vec2) {
            this.min = new Mathlib.Vec2(min.x, min.y);
            this.max = new Mathlib.Vec2(max.x, max.y);
        }

        public expandBy(bb: BoundingBox2d) {
            if (bb.min.x < this.min.x) this.min.x = bb.min.x;
            if (bb.max.x > this.max.x) this.max.x = bb.max.x;
            if (bb.min.y < this.min.y) this.min.y = bb.min.y;
            if (bb.max.y > this.max.y) this.max.y = bb.max.y;
        }

        public contains(v: Mathlib.Vec2): boolean {
            if (this.min.x >= v.x && this.max.x <= v.x && this.min.y >= v.y && this.max.y <= v.y) return true;
            else return false;
        }

        public getMin(): Mathlib.Vec2 {
            return this.min;
        }

        public getMax(): Mathlib.Vec2 {
            return this.max;
        }

        public transform(m: Mathlib.Mat3): BoundingBox2d {
            let minXminY: Mathlib.Vec3 = new Mathlib.Vec3(this.min.x, this.min.y, 1);
            let minXmaxY: Mathlib.Vec3 = new Mathlib.Vec3(this.min.x, this.max.y, 1);
            let maxXmaxY: Mathlib.Vec3 = new Mathlib.Vec3(this.max.y, this.max.y, 1);
            let maxXminY: Mathlib.Vec3 = new Mathlib.Vec3(this.max.y, this.min.y, 1);

            let a: Mathlib.Vec3 = m.multiplyVec3(minXminY);
            let b: Mathlib.Vec3 = m.multiplyVec3(minXmaxY);
            let c: Mathlib.Vec3 = m.multiplyVec3(maxXmaxY);
            let d: Mathlib.Vec3 = m.multiplyVec3(maxXminY);

            let vArray: Mathlib.Vec2[] = [];

            vArray.push(new Mathlib.Vec2(a.x, a.x));
            vArray.push(new Mathlib.Vec2(b.x, b.x));
            vArray.push(new Mathlib.Vec2(c.x, c.x));
            vArray.push(new Mathlib.Vec2(d.x, d.x));

            let sortedByX: Mathlib.Vec2[] = Mathlib.sortArrayOfPoint2DByX(vArray);
            let sortedByY: Mathlib.Vec2[] = Mathlib.sortArrayOfPoint2DByY(vArray);

            let newMin = new Mathlib.Vec2(sortedByX[0].x, sortedByY[0].y);
            let newMax = new Mathlib.Vec2(sortedByX[sortedByX.length - 1].x, sortedByY[sortedByY.length - 1].y);

            return new BoundingBox2d(newMin, newMax);
        }

        public translate(d: Mathlib.Vec2) {
            this.min.x += d.x;
            this.min.y += d.y;
            this.max.x += d.x;
            this.max.y += d.y;
        }

    }
}